{"version":3,"sources":["webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/graphql.module.ts","webpack:///src/core/app-routing.module.ts","webpack:///src/core/authentication/auth.module.ts","webpack:///src/core/authentication/components/login/login.component.html","webpack:///src/core/authentication/components/login/login.component.ts","webpack:///src/core/authentication/components/register/register.component.html","webpack:///src/core/authentication/components/register/register.component.ts","webpack:///src/core/authentication/helpers/error.interceptor.ts","webpack:///src/core/authentication/helpers/fake-backend.ts","webpack:///src/core/authentication/helpers/jwt.interceptor.ts","webpack:///src/core/authentication/services/alert.service.ts","webpack:///src/core/authentication/services/authentication.service.ts","webpack:///src/core/authentication/services/index.ts","webpack:///src/core/authentication/services/user.service.ts","webpack:///src/core/core.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/modules/bracket/bracket-handler.service.ts","webpack:///src/modules/bracket/bracket.module.ts","webpack:///src/modules/bracket/data.service.ts","webpack:///src/shared/app.store.ts","webpack:///src/shared/data/match-container.ts","webpack:///src/shared/data/tournament/tournament.data.service.ts","webpack:///src/shared/data/tournament/tournament.gql.ts","webpack:///src/shared/material.module.ts","webpack:///src/shared/shared.module.ts","webpack:///src/shared/utils/index.ts","webpack:///src/shared/utils/match-subject.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","AppModule","uri","createApollo","httpLink","link","create","cache","GraphQLModule","m","routes","path","loadChildren","component","redirectTo","pathMatch","AppRoutingModule","AuthModule","LoginComponent","formBuilder","route","router","authenticationService","alertService","appStore","loading","submitted","loggedInUser","value","navigate","loginForm","group","username","required","password","returnUrl","snapshot","queryParams","clear","invalid","login","f","pipe","subscribe","data","error","controls","RegisterComponent","userService","registerForm","firstName","lastName","minLength","register","success","ErrorInterceptor","request","next","handle","err","status","logout","location","reload","message","statusText","users","JSON","parse","localStorage","getItem","FakeBackendInterceptor","url","method","headers","body","handleRoute","endsWith","authenticate","getUsers","match","deleteUser","user","find","x","ok","token","length","Math","max","map","push","setItem","stringify","isLoggedIn","unauthorized","filter","idFromUrl","get","urlParts","split","parseInt","fakeBackendProvider","provide","useClass","multi","JwtInterceptor","currentUser","clone","setHeaders","Authorization","AlertService","subject","keepAfterRouteChange","events","event","asObservable","type","text","AuthenticationService","http","post","removeItem","UserService","delete","CoreModule","environment","production","catch","console","BracketHandler","activeContestants","matchContainers","seedsByIndex","matchesPerRound","containerWidth","containerHeight","padding","bracket","activeTournament","contestants","numContestants","createSeededBracket","defineLayoutPlacements","matches","forEach","i","winnerSeed","updateWinner","setMatchContainers","high2Power","pow2RoundUp","bigSkip","seedMatcher","log","numRounds","numFirstRoundMatchesTops","j","pow","setHighMatch","setLowMatch","addObserver","numSeeded","addContestant","moveSpaces","indexes","newIndexes","movesDone","reverse","k","matchWidth","matchHeight","soonToBeRemovedMatches","thisMatch","lowSeed","highSeed","HIGHSEED","top","left","width","height","highMatch","lowMatch","indexOf","BracketModule","DataService","AppStore","currentTournament","allTournaments","MatchContainer","sets","winner","seed","LOWSEED","notifyObservers","contestant","temp","name","position","matchRounds","TournamentDataService","apollo","query","queries","tournaments","result","caught","toPromise","contestantCount","mutate","mutation","mutations","createTournament","variables","addTournament","linkCode","tournamentFromLinkCode","tournamentId","TournamentGqlFunctions","tournamentFromId","MaterialModule","SharedModule","MatchSubject","observers","observer","obs","update"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<router-outlet></router-outlet>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor() {}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { CoreModule } from '../core/core.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { BracketModule } from './../modules/bracket/bracket.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ErrorInterceptor } from 'src/core/authentication/helpers/error.interceptor';\r\nimport { JwtInterceptor } from 'src/core/authentication/helpers/jwt.interceptor';\r\nimport { fakeBackendProvider } from 'src/core/authentication/helpers/fake-backend';\r\nimport { AppStore } from 'src/shared/app.store';\nimport { GraphQLModule } from './graphql.module';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    CoreModule,\r\n    SharedModule,\r\n    BracketModule,\r\n    GraphQLModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    fakeBackendProvider,\r\n    AppStore\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import {NgModule} from '@angular/core';\nimport {ApolloModule, APOLLO_OPTIONS} from 'apollo-angular';\nimport {HttpLinkModule, HttpLink} from 'apollo-angular-link-http';\nimport {InMemoryCache} from 'apollo-cache-inmemory';\n\nconst uri = 'http://localhost:3000/graphql'; // <-- add the URL of the GraphQL server here\nexport function createApollo(httpLink: HttpLink) {\n  return {\n    link: httpLink.create({uri}),\n    cache: new InMemoryCache(),\n  };\n}\n\n@NgModule({\n  exports: [ApolloModule, HttpLinkModule],\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule {}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './authentication/components/login/login.component';\r\nimport { RegisterComponent } from './authentication/components/register/register.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '',  loadChildren: () => import('../modules/home/home.module').then(m => m.HomeModule)  },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: '**', redirectTo: '/', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { AuthenticationService } from './services/authentication.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AlertService } from './services/alert.service';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { AlertComponent } from './components/alert/alert.component';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, RegisterComponent, AlertComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\r\n  providers: [AuthenticationService, AlertService]\r\n})\r\nexport class AuthModule {}\r\n","<h2>Login</h2>\r\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"username\">Username</label>\r\n    <input\r\n      type=\"text\"\r\n      formControlName=\"username\"\r\n      class=\"form-control\"\r\n      [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\r\n    />\r\n    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"password\">Password</label>\r\n    <input\r\n      type=\"password\"\r\n      formControlName=\"password\"\r\n      class=\"form-control\"\r\n      [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\r\n    />\r\n    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n      <span\r\n        *ngIf=\"loading\"\r\n        class=\"spinner-border spinner-border-sm mr-1\"\r\n      ></span>\r\n      Login\r\n    </button>\r\n    <a routerLink=\"/register\" class=\"btn btn-link\">Register</a>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AlertService, AuthenticationService } from '../../services';\r\nimport { AppStore } from 'src/shared/app.store';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService,\r\n    private alertService: AlertService,\r\n    private appStore: AppStore\r\n  ) {\r\n    // redirect to home if already logged in\r\n    if (this.appStore.loggedInUser.value) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/';\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // reset alerts on submit\r\n    this.alertService.clear();\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.authenticationService\r\n      .login(this.f.username.value, this.f.password.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        data => {\r\n          this.router.navigate([this.returnUrl]);\r\n        },\r\n        error => {\r\n          this.alertService.error(error);\r\n          this.loading = false;\r\n        }\r\n      );\r\n  }\r\n}\r\n","<h2>Register</h2>\r\n<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-group\">\r\n        <label for=\"firstName\">First Name</label>\r\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\r\n        <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"lastName\">Last Name</label>\r\n        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\r\n        <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"username\">Username</label>\r\n        <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Register\r\n        </button>\r\n        <a routerLink=\"/login\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AlertService, UserService, AuthenticationService } from '../../services';\r\nimport { AppStore } from 'src/shared/app.store';\r\n\r\n@Component({ templateUrl: 'register.component.html' })\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private alertService: AlertService,\r\n    private appStore: AppStore\r\n  ) {\r\n    // redirect to home if already logged in\r\n    if (this.appStore.loggedInUser.value) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      username: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.registerForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // reset alerts on submit\r\n    this.alertService.clear();\r\n\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.userService\r\n      .register(this.registerForm.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        data => {\r\n          this.alertService.success('Registration successful', true);\r\n          this.router.navigate(['/login']);\r\n        },\r\n        error => {\r\n          this.alertService.error(error);\r\n          this.loading = false;\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private authenticationService: AuthenticationService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      catchError(err => {\r\n        if (err.status === 401) {\r\n          // auto logout if 401 response returned from api\r\n          this.authenticationService.logout();\r\n          location.reload(true);\r\n        }\r\n\r\n        const error = err.error.message || err.statusText;\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpResponse,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HTTP_INTERCEPTORS\r\n} from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\n\r\n// array in local storage for registered users\r\nlet users = JSON.parse(localStorage.getItem('users')) || [];\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const { url, method, headers, body } = request;\r\n\r\n    // wrap in delayed observable to simulate server api call\r\n    return of(null)\r\n      .pipe(mergeMap(handleRoute))\r\n      .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n      .pipe(delay(500))\r\n      .pipe(dematerialize());\r\n\r\n    function handleRoute() {\r\n      switch (true) {\r\n        case url.endsWith('/users/authenticate') && method === 'POST':\r\n          return authenticate();\r\n        case url.endsWith('/users/register') && method === 'POST':\r\n          return register();\r\n        case url.endsWith('/users') && method === 'GET':\r\n          return getUsers();\r\n        case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\r\n          return deleteUser();\r\n        default:\r\n          // pass through any requests not handled above\r\n          return next.handle(request);\r\n      }\r\n    }\r\n\r\n    // route functions\r\n\r\n    function authenticate() {\r\n      const { username, password } = body;\r\n      const user = users.find(\r\n        x => x.username === username && x.password === password\r\n      );\r\n      if (!user) return error('Username or password is incorrect');\r\n      return ok({\r\n        id: user.id,\r\n        username: user.username,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        token: 'fake-jwt-token'\r\n      });\r\n    }\r\n\r\n    function register() {\r\n      const user = body;\r\n\r\n      if (users.find(x => x.username === user.username)) {\r\n        return error('Username \"' + user.username + '\" is already taken');\r\n      }\r\n\r\n      user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\r\n      users.push(user);\r\n      localStorage.setItem('users', JSON.stringify(users));\r\n\r\n      return ok();\r\n    }\r\n\r\n    function getUsers() {\r\n      if (!isLoggedIn()) return unauthorized();\r\n      return ok(users);\r\n    }\r\n\r\n    function deleteUser() {\r\n      if (!isLoggedIn()) return unauthorized();\r\n\r\n      users = users.filter(x => x.id !== idFromUrl());\r\n      localStorage.setItem('users', JSON.stringify(users));\r\n      return ok();\r\n    }\r\n\r\n    // helper functions\r\n\r\n    function ok(body?) {\r\n      return of(new HttpResponse({ status: 200, body }));\r\n    }\r\n\r\n    function error(message) {\r\n      return throwError({ error: { message } });\r\n    }\r\n\r\n    function unauthorized() {\r\n      return throwError({ status: 401, error: { message: 'Unauthorised' } });\r\n    }\r\n\r\n    function isLoggedIn() {\r\n      return headers.get('Authorization') === 'Bearer fake-jwt-token';\r\n    }\r\n\r\n    function idFromUrl() {\r\n      const urlParts = url.split('/');\r\n      return parseInt(urlParts[urlParts.length - 1]);\r\n    }\r\n  }\r\n}\r\n\r\nexport const fakeBackendProvider = {\r\n  // use fake backend in place of Http service for backend-less development\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: FakeBackendInterceptor,\r\n  multi: true\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AppStore } from 'src/shared/app.store';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  constructor(private appStore: AppStore) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    // add authorization header with jwt token if available\r\n    const currentUser = this.appStore.loggedInUser.value;\r\n    if (currentUser && currentUser.token) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${currentUser.token}`\r\n        }\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlertService {\r\n  private subject = new Subject<any>();\r\n  private keepAfterRouteChange = false;\r\n\r\n  constructor(private router: Router) {\r\n    // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationStart) {\r\n        if (this.keepAfterRouteChange) {\r\n          // only keep for a single route change\r\n          this.keepAfterRouteChange = false;\r\n        } else {\r\n          // clear alert message\r\n          this.clear();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getAlert(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  success(message: string, keepAfterRouteChange = false) {\r\n    this.keepAfterRouteChange = keepAfterRouteChange;\r\n    this.subject.next({ type: 'success', text: message });\r\n  }\r\n\r\n  error(message: string, keepAfterRouteChange = false) {\r\n    this.keepAfterRouteChange = keepAfterRouteChange;\r\n    this.subject.next({ type: 'error', text: message });\r\n  }\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this.subject.next();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { AppStore } from 'src/shared/app.store';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n  constructor(private http: HttpClient, private appStore: AppStore) {\r\n    this.appStore.loggedInUser.next(\r\n      JSON.parse(localStorage.getItem('loggedInUser'))\r\n    );\r\n  }\r\n\r\n  login(username, password) {\r\n    return this.http\r\n      .post<any>(`${'http://localhost:4000'}/users/authenticate`, {\r\n        username,\r\n        password\r\n      })\r\n      .pipe(\r\n        map(user => {\r\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n          localStorage.setItem('loggedInUser', JSON.stringify(user));\r\n          this.appStore.loggedInUser.next(user);\r\n          return user;\r\n        })\r\n      );\r\n  }\r\n\r\n  logout() {\r\n    // remove user from local storage and set current user to null\r\n    localStorage.removeItem('loggedInUser');\r\n    this.appStore.loggedInUser.next(null);\r\n  }\r\n}\r\n","export { AlertService } from './alert.service';\r\nexport { AuthenticationService } from './authentication.service';\r\nexport { UserService } from './user.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IUser } from '../../../../../shared/models';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<IUser[]>(`${'http://localhost:4000'}/users`);\r\n    }\r\n\r\n    register(user: IUser) {\r\n        return this.http.post(`${'http://localhost:4000'}/users/register`, user);\r\n    }\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(`${'http://localhost:4000'}/users/${id}`);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AuthModule } from './authentication/auth.module';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  exports: [AppRoutingModule, AuthModule],\r\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\r\n})\r\nexport class CoreModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { DataService } from './data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport _ from 'lodash';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { MatchContainer } from '../../shared/data/match-container';\r\nimport { ITournament, IContestant } from '../../../../shared/models/index';\r\n\r\n@Injectable()\r\nexport class BracketHandler {\r\n  activeTournament: Partial<ITournament>;\r\n  activeContestants: Partial<IContestant>[] = [];\r\n  numContestants: number; // number of contestants\r\n  numTotalMatches: number; // number of total matches in the tournament\r\n  matchContainers: MatchContainer[] = []; // all the matches in this tournament\r\n\r\n  numRows: number; // number of rows for layout ()\r\n  high2Power: number; // the next 2^x after numContestants\r\n  numRounds: number; // number of rounds, therefore number of columns\r\n\r\n  // positions of seeds in order.\r\n  // the index corresponds to the seed, the value\r\n  // is the position in the first row for that seed\r\n  seedsByIndex = [];\r\n  bigSkip: number; // the biggest skip in matches for seeding this tournament\r\n\r\n  // two dimensional array to store matches for each round\r\n  // matchesPerRound[round][match]\r\n  matchesPerRound = [];\r\n\r\n  containerWidth = 0;\r\n  containerHeight = 0;\r\n  matchWidth;\r\n  matchHeight;\r\n  padding = 16;\r\n\r\n  constructor(private data: DataService) {}\r\n\r\n  createBracket(bracket: Partial<ITournament>) {\r\n    this.activeTournament = bracket;\r\n    this.activeContestants = bracket.contestants;\r\n    this.matchContainers = [];\r\n    this.numContestants = this.activeContestants.length;\r\n    this.createSeededBracket();\r\n    this.defineLayoutPlacements();\r\n\r\n    // if this is a previously stored match, update the winners\r\n    if (this.activeTournament.matches) {\r\n      this.matchContainers.forEach((match, i) => {\r\n        if (this.activeTournament.matches[i].winnerSeed) {\r\n          match.updateWinner(this.activeTournament.matches[i].winnerSeed);\r\n        }\r\n      });\r\n    }\r\n    this.data.setMatchContainers(this.matchContainers);\r\n  }\r\n\r\n  createSeededBracket() {\r\n    this.high2Power = this.pow2RoundUp(this.numContestants);\r\n    this.bigSkip = this.high2Power / 4;\r\n    this.seedsByIndex = [];\r\n    this.seedMatcher(1);\r\n    console.log('seedsByIndex: ', this.seedsByIndex);\r\n\r\n    this.numRounds = Math.log(this.high2Power) / Math.log(2);\r\n    this.matchesPerRound = [];\r\n    const numFirstRoundMatchesTops = this.high2Power / 2;\r\n    for (let i = 0; i < this.numRounds; i++) {\r\n      this.matchesPerRound[i] = [];\r\n    }\r\n\r\n    // Add the appropriate amount of matches per round.\r\n    // Starts from the winner and moves back.\r\n    for (let i = 0; i < this.numRounds; i++) {\r\n      for (let j = 0; j < numFirstRoundMatchesTops / Math.pow(2, i); j++) {\r\n        this.matchesPerRound[i][j] = new MatchContainer();\r\n        this.matchContainers.push(this.matchesPerRound[i][j]);\r\n      }\r\n    }\r\n\r\n    // Subscribe each match to the appropriate preceding matches.\r\n    for (let i = this.numRounds - 1; i > 0; i--) {\r\n      for (let j = 0; j < numFirstRoundMatchesTops / Math.pow(2, i); j++) {\r\n        this.matchesPerRound[i][j].setHighMatch(\r\n          this.matchesPerRound[i - 1][j * 2]\r\n        );\r\n        this.matchesPerRound[i][j].setLowMatch(\r\n          this.matchesPerRound[i - 1][j * 2 + 1]\r\n        );\r\n        this.matchesPerRound[i - 1][j * 2].addObserver(\r\n          this.matchesPerRound[i][j]\r\n        );\r\n        this.matchesPerRound[i - 1][j * 2 + 1].addObserver(\r\n          this.matchesPerRound[i][j]\r\n        );\r\n      }\r\n    }\r\n\r\n    let numSeeded = 0;\r\n    // place contestants in the correct match based on their seed\r\n    for (let i = 0; i < this.high2Power / 2; i++) {\r\n      if (numSeeded >= this.high2Power / 2) {\r\n        break;\r\n      }\r\n      console.log(this.activeContestants[i]);\r\n      this.matchesPerRound[0][this.seedsByIndex[i] - 1].addContestant(\r\n        this.activeContestants[i]\r\n      );\r\n      numSeeded++;\r\n    }\r\n    // loop backwards the other way for the second half\r\n    for (let i = 0; i < this.activeContestants.length - this.bigSkip * 2; i++) {\r\n      if (numSeeded >= this.numContestants) {\r\n        break;\r\n      }\r\n      this.matchesPerRound[0][\r\n        this.seedsByIndex[this.seedsByIndex.length - 1 - i] - 1\r\n      ].addContestant(this.activeContestants[this.bigSkip * 2 + i]);\r\n      numSeeded++;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recursive function that seeds first round matches\r\n   * depending on the number of matchSlots\r\n   *\r\n   * MUST be given 1 as a parameter when\r\n   * called outside itself\r\n   *\r\n   * TODO: Change that ^ so this function doesn't\r\n   * rely on this class\r\n   *\r\n   * @param moveSpaces  The amount of matches to move\r\n   * @return            New indexes to apply algorithm to\r\n   */\r\n  seedMatcher(moveSpaces) {\r\n    moveSpaces *= 2;\r\n    let indexes;\r\n\r\n    if (moveSpaces < this.bigSkip) {\r\n      indexes = this.seedMatcher(moveSpaces);\r\n    } else {\r\n      // First 2 seed are anomalous to the pattern\r\n      if (this.bigSkip === 1) {\r\n        // if tourny size is 4\r\n        this.seedsByIndex.push(1);\r\n        this.seedsByIndex.push(2);\r\n      } else if (this.bigSkip === 2) {\r\n        // if tournament size 8\r\n        this.seedsByIndex.push(1);\r\n        this.seedsByIndex.push(3);\r\n        this.seedsByIndex.push(4);\r\n        this.seedsByIndex.push(2);\r\n      } else {\r\n        this.seedsByIndex.push(1);\r\n        this.seedsByIndex.push(1 + moveSpaces);\r\n      }\r\n      indexes = [];\r\n      indexes[0] = 1;\r\n      indexes[1] = 0;\r\n      return indexes;\r\n    }\r\n\r\n    // indexes of newly placed seed\r\n    // this will be returned to use for the next placements\r\n    const newIndexes = [];\r\n    let movesDone = 0;\r\n    for (let i = 0; i < indexes.length; i++) {\r\n      newIndexes[i] = this.seedsByIndex.length;\r\n      this.seedsByIndex.push(this.seedsByIndex[indexes[i]] + moveSpaces);\r\n      ++movesDone;\r\n    }\r\n\r\n    if (movesDone < this.bigSkip / moveSpaces) {\r\n      for (let j = indexes.length - 1; j >= 0; j--) {\r\n        newIndexes[movesDone] = this.seedsByIndex.length;\r\n        this.seedsByIndex.push(this.seedsByIndex[indexes[j]] - moveSpaces);\r\n        ++movesDone;\r\n      }\r\n    }\r\n\r\n    // Reverse new indexes so next cycle indexes backwards\r\n    newIndexes.reverse();\r\n\r\n    // Because we\r\n    if (moveSpaces === 2) {\r\n      moveSpaces = 1;\r\n      for (let k = this.seedsByIndex.length - 1; k >= 0; k--) {\r\n        this.seedsByIndex.push(this.seedsByIndex[k] + moveSpaces);\r\n      }\r\n    }\r\n    return newIndexes;\r\n  }\r\n\r\n  defineLayoutPlacements() {\r\n    // this.containerWidth = window.innerWidth - this.padding * 2;\r\n    // this.containerHeight = window.innerHeight - this.padding * 2;\r\n\r\n    this.matchWidth = this.containerWidth / 3 - this.padding;\r\n    this.matchHeight = this.containerHeight / 4 - this.padding;\r\n    debugger\r\n\r\n    const soonToBeRemovedMatches = [];\r\n    for (let i = 0; i < this.matchesPerRound.length; i++) {\r\n      for (let j = 0; j < this.matchesPerRound[i].length; j++) {\r\n        const thisMatch = this.matchesPerRound[i][j];\r\n        if (i === 0) {\r\n          if (!thisMatch.lowSeed) {\r\n            thisMatch.updateWinner(thisMatch.highSeed);\r\n            soonToBeRemovedMatches.push(thisMatch);\r\n            thisMatch.updateWinner(MatchContainer.HIGHSEED);\r\n          }\r\n          thisMatch.top = (this.matchHeight + this.padding) * j + this.padding;\r\n          thisMatch.left = 0 + this.padding;\r\n          thisMatch.width = this.matchWidth;\r\n          thisMatch.height = this.matchHeight;\r\n        } else {\r\n          thisMatch.top =\r\n            thisMatch.highMatch.top -\r\n            (thisMatch.highMatch.top - thisMatch.lowMatch.top) / 2;\r\n          thisMatch.left =\r\n            thisMatch.highMatch.left + this.matchWidth + this.padding;\r\n          thisMatch.width = this.matchWidth;\r\n          thisMatch.height = this.matchHeight;\r\n        }\r\n      }\r\n    }\r\n    this.matchContainers = this.matchContainers.filter(m => {\r\n      return soonToBeRemovedMatches.indexOf(m) === -1;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Round down to next higher power of 2 (return x if it's already a power of 2).\r\n   *\r\n   * @param x  The number in question\r\n   * @return   The next highest power of 2\r\n   */\r\n  pow2RoundUp(x) {\r\n    if (x < 0) {\r\n      return 0;\r\n    }\r\n    --x;\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 1;\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 2;\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 4;\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 8;\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 16;\r\n    return x + 1;\r\n  }\r\n\r\n  /**\r\n   * Round down to next lower power of 2 (return x if it's already a power of 2).\r\n   *\r\n   * @param x  The number in question\r\n   * @return   The next lowest power of 2\r\n   */\r\n  pow2RoundDown(x) {\r\n    if (x < 0) {\r\n      return 0;\r\n    }\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 1;\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 2;\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 4;\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 8;\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 16;\r\n    // tslint:disable-next-line: no-bitwise\r\n    return x - (x >> 1);\r\n  }\r\n\r\n  setContainerDimensions(width: number, height: number) {\r\n    this.containerWidth = width - this.padding * 2;\r\n    this.containerHeight = height - this.padding * 2;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from 'src/shared/shared.module';\r\nimport { BracketHandler } from './bracket-handler.service';\r\nimport { DataService } from './data.service';\r\nimport { BracketViewComponent } from './bracket-view/bracket-view.component';\r\n\r\n@NgModule({\r\n  declarations: [BracketViewComponent],\r\n  imports: [CommonModule, SharedModule],\r\n  providers: [BracketHandler, DataService],\r\n  exports: [BracketViewComponent]\r\n})\r\nexport class BracketModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { MatchContainer } from '../../shared/data/match-container';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n  matchContainers: BehaviorSubject<MatchContainer[]> = new BehaviorSubject<\r\n    MatchContainer[]\r\n  >(null);\r\n\r\n  setMatchContainers(matchContainers: MatchContainer[]) {\r\n    this.matchContainers.next(matchContainers);\r\n  }\r\n\r\n  getMatchContainers() {\r\n    return this.matchContainers;\r\n  }\r\n}\r\n","import { BehaviorSubject } from 'rxjs';\r\n\r\nimport { IUser, ITournament } from '../../../shared/models';\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\nexport class AppStore {\r\n  loggedInUser: BehaviorSubject<IUser> = new BehaviorSubject<IUser>(null);\r\n  currentTournament: BehaviorSubject<Partial<ITournament>> = new BehaviorSubject<Partial<ITournament>>(null);\r\n  allTournaments: BehaviorSubject<Partial<ITournament>[]> = new BehaviorSubject<Partial<ITournament>[]>(null);\r\n}\r\n","import { ITeam, ISet, IMatch, IContestant } from '../../../../shared/models';\r\nimport { MatchSubject, MatchObserver } from '../utils';\r\n\r\nexport class MatchContainer extends MatchSubject implements MatchObserver {\r\n  static HIGHSEED = 'HIGHSEED';\r\n  static LOWSEED = 'LOWSEED';\r\n\r\n  match: IMatch;\r\n\r\n  highSeed: IContestant; // higher seeded contestant that will be shown at top\r\n  lowSeed: IContestant; // lower seeded contestant that will be shown at bottom\r\n  highMatch: IMatch; // match from previous round that will determine our high seed\r\n  lowMatch: IMatch; // match from previous round that will determine our low seed\r\n\r\n  sets: ISet[] = [];\r\n\r\n  winner: IContestant; // the winner of this match;\r\n  winnerSeed: string;\r\n\r\n  width;\r\n  height;\r\n  top;\r\n  left;\r\n\r\n  update() {\r\n    this.highSeed = this.highMatch.winner;\r\n    this.lowSeed = this.lowMatch.winner;\r\n  }\r\n\r\n  updateWinner(seed: string) {\r\n    if (seed === MatchContainer.HIGHSEED) {\r\n      this.winner = this.highSeed;\r\n      this.winnerSeed = MatchContainer.HIGHSEED;\r\n    }\r\n    if (seed === MatchContainer.LOWSEED) {\r\n      this.winner = this.lowSeed;\r\n      this.winnerSeed = MatchContainer.LOWSEED;\r\n    }\r\n    this.notifyObservers();\r\n    // this.next(this.match);\r\n  }\r\n\r\n  /**\r\n   * Places the given contestant in the high seed slot\r\n   *\r\n   * @param matchSlot MatchSlot to add to match\r\n   * @return           Returns either replaced contestant or null if spot was open\r\n   */\r\n  setHighSeed(contestant) {\r\n    if (this.highSeed === null) {\r\n      this.highSeed = contestant;\r\n      return null;\r\n    } else {\r\n      const temp = this.highSeed;\r\n      this.highSeed = contestant;\r\n      return temp;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Places the given contestant in the high seed slot\r\n   *\r\n   * @param matchSlot MatchSlot to add to match\r\n   * @return           Returns either replaced contestant or null if spot was open\r\n   */\r\n  setLowSeed(contestant) {\r\n    if (this.lowSeed === null) {\r\n      this.lowSeed = contestant;\r\n      return null;\r\n    } else {\r\n      const temp = this.lowSeed;\r\n      this.lowSeed = contestant;\r\n      return temp;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method is used to add a contestant to a match\r\n   * and will add it to the correct seed based on\r\n   * contestant's seed.\r\n   *\r\n   * WARNING!\r\n   * If match is full, will kick a player out of the match\r\n   * and return it.\r\n   *\r\n   * @param contestant Contestant to add to match\r\n   * @return\r\n   */\r\n  addContestant(contestant) {\r\n    if (!this.highSeed && !this.lowSeed) {\r\n      // if both high and low seeds are empty\r\n      console.log('New high seed by default.');\r\n      this.highSeed = contestant; // store in high seed\r\n      return null;\r\n    } else if (!this.lowSeed) {\r\n      // if only low seed is empty\r\n      if (this.highSeed.seed <= contestant.seed || !contestant.seed) {\r\n        // if the current higher seed has better or equal seed\r\n        console.log('New low seed.');\r\n        this.lowSeed = contestant; // store in low seed\r\n        return null;\r\n      } else {\r\n        console.log('New high seed, demoted prev to low seed.');\r\n        this.lowSeed = this.highSeed; // move current high seed to low\r\n        this.highSeed = contestant; // store new contestant in high seed\r\n        return null;\r\n      }\r\n    } else if (!this.highSeed) {\r\n      // if only the high seed is empty\r\n      if (contestant.seed && this.lowSeed.seed > contestant.seed) {\r\n        // if the current lower seed has worse seed\r\n        console.log('New high seed.');\r\n        this.highSeed = contestant; // sotre in high seed\r\n        return null;\r\n      } else {\r\n        console.log('New low seed, promoted prev to high seed.');\r\n        this.highSeed = this.lowSeed; // move current low seed to high seed\r\n        this.lowSeed = contestant; // store new contestant in high seed\r\n        return null;\r\n      }\r\n    } else {\r\n      // if the new contestant has better seed than the low seed and worse than the high seed\r\n      if (\r\n        this.highSeed.seed <= contestant.seed &&\r\n        contestant.seed > this.lowSeed.seed\r\n      ) {\r\n        console.log('New low seed, returned old low seed.');\r\n        const temp = this.lowSeed;\r\n        this.lowSeed = contestant; // save newbie to low seed\r\n        return temp; // and return the removed contestant\r\n        // the new contestant had more than the high seed\r\n      } else if (this.highSeed.seed > contestant.seed) {\r\n        console.log('New high seed, returned old low seed.');\r\n        const temp = this.lowSeed;\r\n        this.lowSeed = this.highSeed;\r\n        this.highSeed = contestant;\r\n        return temp;\r\n      } else {\r\n        console.log(`OOPS! ${contestant.name} was not added to the match.`);\r\n        return contestant;\r\n      }\r\n    }\r\n  }\r\n\r\n  // save a reference to the high match so we can\r\n  // try to grab the winner in our update function\r\n  setHighMatch(match: IMatch) {\r\n    this.highMatch = match;\r\n    this.highSeed = match.winner;\r\n  }\r\n\r\n  getHighMatch() {\r\n    return this.highMatch;\r\n  }\r\n\r\n  // save a reference to the low match so we can\r\n  // try to grab the winner in our update function\r\n  setLowMatch(match: IMatch) {\r\n    this.lowMatch = match;\r\n    this.lowSeed = match.winner;\r\n  }\r\n\r\n  getLowMatch() {\r\n    return this.lowMatch;\r\n  }\r\n\r\n  getStyleObject() {\r\n    return {\r\n      position: 'absolute',\r\n      'top.px': this.top,\r\n      'left.px': this.left,\r\n      'width.px': this.width,\r\n      'height.px': this.height\r\n    };\r\n  }\r\n\r\n  getData() {\r\n    return {\r\n      highSeed: this.highSeed.id,\r\n      lowSeed: this.lowSeed.id,\r\n      highMatch: this.highMatch,\r\n      lowMatch: this.lowMatch,\r\n\r\n      matchRounds: this.sets,\r\n\r\n      winner: this.winner.id,\r\n      winnerSeed: this.winnerSeed\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Apollo } from 'apollo-angular';\r\nimport { TournamentGqlFunctions } from './tournament.gql';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { AppStore } from 'src/shared/app.store';\r\n\r\n@Injectable()\r\nexport class TournamentDataService {\r\n  constructor(private apollo: Apollo, private appStore: AppStore) {}\r\n\r\n  getAllTournaments() {\r\n    return this.apollo\r\n      .query({\r\n        query: TournamentGqlFunctions.queries.tournaments\r\n      })\r\n      .pipe(\r\n        tap((result: any) => {\r\n          this.appStore.allTournaments.next(result.data.tournaments);\r\n        }),\r\n        catchError((error, caught) => {\r\n          return caught;\r\n        })\r\n      )\r\n      .toPromise();\r\n  }\r\n\r\n  createTournament({ name, contestantCount }) {\r\n    return this.apollo\r\n      .mutate({\r\n        mutation: TournamentGqlFunctions.mutations.createTournament,\r\n        variables: {\r\n          name,\r\n          contestantCount\r\n        }\r\n      })\r\n      .pipe(\r\n        tap((result: any) => {\r\n          this.appStore.currentTournament.next(result.data.addTournament);\r\n        })\r\n      );\r\n  }\r\n\r\n  getTournamentFromId(linkCode: string) {\r\n    return this.apollo\r\n      .query({\r\n        query: TournamentGqlFunctions.queries.tournamentFromLinkCode,\r\n        variables: {\r\n          linkCode\r\n        }\r\n      })\r\n      .pipe(\r\n        tap((result: any) => {\r\n          this.appStore.currentTournament.next(\r\n            result.data.tournamentFromLinkCode\r\n          );\r\n        })\r\n      );\r\n  }\r\n\r\n  getTournamentFromLinkCode(linkCode: string) {\r\n    return this.apollo\r\n      .query({\r\n        query: TournamentGqlFunctions.queries.tournamentFromLinkCode,\r\n        variables: {\r\n          linkCode\r\n        }\r\n      })\r\n      .pipe(\r\n        tap((result: any) => {\r\n          this.appStore.currentTournament.next(\r\n            result.data.tournamentFromLinkCode\r\n          );\r\n        })\r\n      );\r\n  }\r\n\r\n  addContestant(tournamentId: string, contestant) {}\r\n}\r\n","import gql from 'graphql-tag';\r\n\r\nexport const TournamentGqlFunctions = {\r\n  mutations: {\r\n    createTournament: gql`\r\n      mutation addTournament($name: String!, $contestantCount: Int!) {\r\n        addTournament(\r\n          newTournamentData: { name: $name, contestantCount: $contestantCount }\r\n        ) {\r\n          id\r\n          name\r\n          contestantCount\r\n          linkCode\r\n          createdOn\r\n        }\r\n      }\r\n    `\r\n  },\r\n  queries: {\r\n    tournamentFromId: gql`\r\n      query tournamentFromLinkCode($linkCode: String!) {\r\n        tournamentFromLinkCode(linkCode: $linkCode) {\r\n          id\r\n          name\r\n          contestantCount\r\n          linkCode\r\n          createdOn\r\n        }\r\n      }\r\n    `,\r\n    tournamentFromLinkCode: gql`\r\n      query tournamentFromLinkCode($linkCode: String!) {\r\n        tournamentFromLinkCode(linkCode: $linkCode) {\r\n          id\r\n          name\r\n          contestantCount\r\n          linkCode\r\n          createdOn\r\n        }\r\n      }\r\n    `,\r\n    tournaments: gql`\r\n      query tournaments($skip: Int, $take: Int) {\r\n        tournaments(skip: $skip, take: $take ) {\r\n          id\r\n          name\r\n          createdOn\r\n          linkCode\r\n        }\r\n      }\r\n    `\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatButtonModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    MatListModule,\r\n    MatTabsModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { MaterialModule } from './material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TournamentDataService } from './data/tournament/tournament.data.service';\r\n\r\n@NgModule({\r\n  exports: [FormsModule, ReactiveFormsModule, MaterialModule],\r\n  providers: [TournamentDataService]\r\n})\r\nexport class SharedModule {}\r\n","export { MatchObserver } from './match-observer';\r\nexport { MatchSubject } from './match-subject';\r\n","import { MatchObserver } from './match-observer';\r\n\r\nexport abstract class MatchSubject {\r\n  observers: MatchObserver[] = [];\r\n\r\n  addObserver(observer) {\r\n    if (this.observers.indexOf(observer) === -1) {\r\n      this.observers.push(observer);\r\n    }\r\n  }\r\n\r\n  removeObserver(observer) {\r\n    this.observers = this.observers.filter(obs => {\r\n      return observer !== obs;\r\n    });\r\n  }\r\n\r\n  notifyObservers() {\r\n    for (const observer of this.observers) {\r\n      observer.update();\r\n    }\r\n  }\r\n}\r\n"]}