{"version":3,"sources":["./src/$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/graphql.module.ts","./src/core/app-routing.module.ts","./src/core/authentication/auth.module.ts","./src/core/authentication/components/login/login.component.html","./src/core/authentication/components/login/login.component.ts","./src/core/authentication/components/register/register.component.html","./src/core/authentication/components/register/register.component.ts","./src/core/authentication/helpers/error.interceptor.ts","./src/core/authentication/helpers/fake-backend.ts","./src/core/authentication/helpers/jwt.interceptor.ts","./src/core/authentication/services/alert.service.ts","./src/core/authentication/services/authentication.service.ts","./src/core/authentication/services/index.ts","./src/core/authentication/services/user.service.ts","./src/core/core.module.ts","./src/environments/environment.ts","./src/main.ts","./src/modules/bracket/bracket-handler.service.ts","./src/modules/bracket/bracket.module.ts","./src/modules/bracket/data.service.ts","./src/shared/app.store.ts","./src/shared/data/match-container.ts","./src/shared/data/tournament/tournament.data.service.ts","./src/shared/data/tournament/tournament.gql.ts","./src/shared/material.module.ts","./src/shared/shared.module.ts","./src/shared/utils/index.ts","./src/shared/utils/match-subject.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<router-outlet></router-outlet>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor() {}\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { CoreModule } from '../core/core.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { BracketModule } from './../modules/bracket/bracket.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ErrorInterceptor } from 'src/core/authentication/helpers/error.interceptor';\r\nimport { JwtInterceptor } from 'src/core/authentication/helpers/jwt.interceptor';\r\nimport { fakeBackendProvider } from 'src/core/authentication/helpers/fake-backend';\r\nimport { AppStore } from 'src/shared/app.store';\nimport { GraphQLModule } from './graphql.module';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    CoreModule,\r\n    SharedModule,\r\n    BracketModule,\r\n    GraphQLModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    fakeBackendProvider,\r\n    AppStore\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import {NgModule} from '@angular/core';\nimport {ApolloModule, APOLLO_OPTIONS} from 'apollo-angular';\nimport {HttpLinkModule, HttpLink} from 'apollo-angular-link-http';\nimport {InMemoryCache} from 'apollo-cache-inmemory';\n\nconst uri = 'http://localhost:3000/graphql'; // <-- add the URL of the GraphQL server here\nexport function createApollo(httpLink: HttpLink) {\n  return {\n    link: httpLink.create({uri}),\n    cache: new InMemoryCache(),\n  };\n}\n\n@NgModule({\n  exports: [ApolloModule, HttpLinkModule],\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule {}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './authentication/components/login/login.component';\r\nimport { RegisterComponent } from './authentication/components/register/register.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '',  loadChildren: () => import('../modules/home/home.module').then(m => m.HomeModule)  },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'register', component: RegisterComponent },\r\n  { path: '**', redirectTo: '/', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { AuthenticationService } from './services/authentication.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AlertService } from './services/alert.service';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { AlertComponent } from './components/alert/alert.component';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, RegisterComponent, AlertComponent],\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\r\n  providers: [AuthenticationService, AlertService]\r\n})\r\nexport class AuthModule {}\r\n","<h2>Login</h2>\r\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n  <div class=\"form-group\">\r\n    <label for=\"username\">Username</label>\r\n    <input\r\n      type=\"text\"\r\n      formControlName=\"username\"\r\n      class=\"form-control\"\r\n      [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\r\n    />\r\n    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label for=\"password\">Password</label>\r\n    <input\r\n      type=\"password\"\r\n      formControlName=\"password\"\r\n      class=\"form-control\"\r\n      [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\r\n    />\r\n    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n      <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n      <span\r\n        *ngIf=\"loading\"\r\n        class=\"spinner-border spinner-border-sm mr-1\"\r\n      ></span>\r\n      Login\r\n    </button>\r\n    <a routerLink=\"/register\" class=\"btn btn-link\">Register</a>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AlertService, AuthenticationService } from '../../services';\r\nimport { AppStore } from 'src/shared/app.store';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService,\r\n    private alertService: AlertService,\r\n    private appStore: AppStore\r\n  ) {\r\n    // redirect to home if already logged in\r\n    if (this.appStore.loggedInUser.value) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/';\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // reset alerts on submit\r\n    this.alertService.clear();\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.authenticationService\r\n      .login(this.f.username.value, this.f.password.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        data => {\r\n          this.router.navigate([this.returnUrl]);\r\n        },\r\n        error => {\r\n          this.alertService.error(error);\r\n          this.loading = false;\r\n        }\r\n      );\r\n  }\r\n}\r\n","<h2>Register</h2>\r\n<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\r\n    <div class=\"form-group\">\r\n        <label for=\"firstName\">First Name</label>\r\n        <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\r\n        <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"lastName\">Last Name</label>\r\n        <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\r\n        <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"username\">Username</label>\r\n        <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\r\n        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.username.errors.required\">Username is required</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\r\n        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\r\n            <div *ngIf=\"f.password.errors.required\">Password is required</div>\r\n            <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <button [disabled]=\"loading\" class=\"btn btn-primary\">\r\n            <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\r\n            Register\r\n        </button>\r\n        <a routerLink=\"/login\" class=\"btn btn-link\">Cancel</a>\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { AlertService, UserService, AuthenticationService } from '../../services';\r\nimport { AppStore } from 'src/shared/app.store';\r\n\r\n@Component({ templateUrl: 'register.component.html' })\r\nexport class RegisterComponent implements OnInit {\r\n  registerForm: FormGroup;\r\n  loading = false;\r\n  submitted = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private alertService: AlertService,\r\n    private appStore: AppStore\r\n  ) {\r\n    // redirect to home if already logged in\r\n    if (this.appStore.loggedInUser.value) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.registerForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      username: ['', Validators.required],\r\n      password: ['', [Validators.required, Validators.minLength(6)]]\r\n    });\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.registerForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // reset alerts on submit\r\n    this.alertService.clear();\r\n\r\n    // stop here if form is invalid\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.userService\r\n      .register(this.registerForm.value)\r\n      .pipe(first())\r\n      .subscribe(\r\n        data => {\r\n          this.alertService.success('Registration successful', true);\r\n          this.router.navigate(['/login']);\r\n        },\r\n        error => {\r\n          this.alertService.error(error);\r\n          this.loading = false;\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private authenticationService: AuthenticationService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      catchError(err => {\r\n        if (err.status === 401) {\r\n          // auto logout if 401 response returned from api\r\n          this.authenticationService.logout();\r\n          location.reload(true);\r\n        }\r\n\r\n        const error = err.error.message || err.statusText;\r\n        return throwError(error);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpResponse,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HTTP_INTERCEPTORS\r\n} from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\n\r\n// array in local storage for registered users\r\nlet users = JSON.parse(localStorage.getItem('users')) || [];\r\n\r\n@Injectable()\r\nexport class FakeBackendInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const { url, method, headers, body } = request;\r\n\r\n    // wrap in delayed observable to simulate server api call\r\n    return of(null)\r\n      .pipe(mergeMap(handleRoute))\r\n      .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n      .pipe(delay(500))\r\n      .pipe(dematerialize());\r\n\r\n    function handleRoute() {\r\n      switch (true) {\r\n        case url.endsWith('/users/authenticate') && method === 'POST':\r\n          return authenticate();\r\n        case url.endsWith('/users/register') && method === 'POST':\r\n          return register();\r\n        case url.endsWith('/users') && method === 'GET':\r\n          return getUsers();\r\n        case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\r\n          return deleteUser();\r\n        default:\r\n          // pass through any requests not handled above\r\n          return next.handle(request);\r\n      }\r\n    }\r\n\r\n    // route functions\r\n\r\n    function authenticate() {\r\n      const { username, password } = body;\r\n      const user = users.find(\r\n        x => x.username === username && x.password === password\r\n      );\r\n      if (!user) return error('Username or password is incorrect');\r\n      return ok({\r\n        id: user.id,\r\n        username: user.username,\r\n        firstName: user.firstName,\r\n        lastName: user.lastName,\r\n        token: 'fake-jwt-token'\r\n      });\r\n    }\r\n\r\n    function register() {\r\n      const user = body;\r\n\r\n      if (users.find(x => x.username === user.username)) {\r\n        return error('Username \"' + user.username + '\" is already taken');\r\n      }\r\n\r\n      user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\r\n      users.push(user);\r\n      localStorage.setItem('users', JSON.stringify(users));\r\n\r\n      return ok();\r\n    }\r\n\r\n    function getUsers() {\r\n      if (!isLoggedIn()) return unauthorized();\r\n      return ok(users);\r\n    }\r\n\r\n    function deleteUser() {\r\n      if (!isLoggedIn()) return unauthorized();\r\n\r\n      users = users.filter(x => x.id !== idFromUrl());\r\n      localStorage.setItem('users', JSON.stringify(users));\r\n      return ok();\r\n    }\r\n\r\n    // helper functions\r\n\r\n    function ok(body?) {\r\n      return of(new HttpResponse({ status: 200, body }));\r\n    }\r\n\r\n    function error(message) {\r\n      return throwError({ error: { message } });\r\n    }\r\n\r\n    function unauthorized() {\r\n      return throwError({ status: 401, error: { message: 'Unauthorised' } });\r\n    }\r\n\r\n    function isLoggedIn() {\r\n      return headers.get('Authorization') === 'Bearer fake-jwt-token';\r\n    }\r\n\r\n    function idFromUrl() {\r\n      const urlParts = url.split('/');\r\n      return parseInt(urlParts[urlParts.length - 1]);\r\n    }\r\n  }\r\n}\r\n\r\nexport const fakeBackendProvider = {\r\n  // use fake backend in place of Http service for backend-less development\r\n  provide: HTTP_INTERCEPTORS,\r\n  useClass: FakeBackendInterceptor,\r\n  multi: true\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AppStore } from 'src/shared/app.store';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  constructor(private appStore: AppStore) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    // add authorization header with jwt token if available\r\n    const currentUser = this.appStore.loggedInUser.value;\r\n    if (currentUser && currentUser.token) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${currentUser.token}`\r\n        }\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AlertService {\r\n  private subject = new Subject<any>();\r\n  private keepAfterRouteChange = false;\r\n\r\n  constructor(private router: Router) {\r\n    // clear alert messages on route change unless 'keepAfterRouteChange' flag is true\r\n    this.router.events.subscribe(event => {\r\n      if (event instanceof NavigationStart) {\r\n        if (this.keepAfterRouteChange) {\r\n          // only keep for a single route change\r\n          this.keepAfterRouteChange = false;\r\n        } else {\r\n          // clear alert message\r\n          this.clear();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getAlert(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  success(message: string, keepAfterRouteChange = false) {\r\n    this.keepAfterRouteChange = keepAfterRouteChange;\r\n    this.subject.next({ type: 'success', text: message });\r\n  }\r\n\r\n  error(message: string, keepAfterRouteChange = false) {\r\n    this.keepAfterRouteChange = keepAfterRouteChange;\r\n    this.subject.next({ type: 'error', text: message });\r\n  }\r\n\r\n  clear() {\r\n    // clear by calling subject.next() without parameters\r\n    this.subject.next();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { AppStore } from 'src/shared/app.store';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationService {\r\n  constructor(private http: HttpClient, private appStore: AppStore) {\r\n    this.appStore.loggedInUser.next(\r\n      JSON.parse(localStorage.getItem('loggedInUser'))\r\n    );\r\n  }\r\n\r\n  login(username, password) {\r\n    return this.http\r\n      .post<any>(`${'http://localhost:4000'}/users/authenticate`, {\r\n        username,\r\n        password\r\n      })\r\n      .pipe(\r\n        map(user => {\r\n          // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n          localStorage.setItem('loggedInUser', JSON.stringify(user));\r\n          this.appStore.loggedInUser.next(user);\r\n          return user;\r\n        })\r\n      );\r\n  }\r\n\r\n  logout() {\r\n    // remove user from local storage and set current user to null\r\n    localStorage.removeItem('loggedInUser');\r\n    this.appStore.loggedInUser.next(null);\r\n  }\r\n}\r\n","export { AlertService } from './alert.service';\r\nexport { AuthenticationService } from './authentication.service';\r\nexport { UserService } from './user.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { IUser } from '../../../../../shared/models';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get<IUser[]>(`${'http://localhost:4000'}/users`);\r\n    }\r\n\r\n    register(user: IUser) {\r\n        return this.http.post(`${'http://localhost:4000'}/users/register`, user);\r\n    }\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(`${'http://localhost:4000'}/users/${id}`);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AuthModule } from './authentication/auth.module';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  exports: [AppRoutingModule, AuthModule],\r\n  providers: [{ provide: APP_BASE_HREF, useValue: '/' }]\r\n})\r\nexport class CoreModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { DataService } from './data.service';\r\nimport { Injectable } from '@angular/core';\r\nimport _ from 'lodash';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { MatchContainer } from '../../shared/data/match-container';\r\nimport { ITournament, IContestant } from '../../../../shared/models/index';\r\n\r\n@Injectable()\r\nexport class BracketHandler {\r\n  activeTournament: Partial<ITournament>;\r\n  activeContestants: Partial<IContestant>[] = [];\r\n  numContestants: number; // number of contestants\r\n  numTotalMatches: number; // number of total matches in the tournament\r\n  matchContainers: MatchContainer[] = []; // all the matches in this tournament\r\n\r\n  numRows: number; // number of rows for layout ()\r\n  high2Power: number; // the next 2^x after numContestants\r\n  numRounds: number; // number of rounds, therefore number of columns\r\n\r\n  // positions of seeds in order.\r\n  // the index corresponds to the seed, the value\r\n  // is the position in the first row for that seed\r\n  seedsByIndex = [];\r\n  bigSkip: number; // the biggest skip in matches for seeding this tournament\r\n\r\n  // two dimensional array to store matches for each round\r\n  // matchesPerRound[round][match]\r\n  matchesPerRound = [];\r\n\r\n  containerWidth = 0;\r\n  containerHeight = 0;\r\n  matchWidth;\r\n  matchHeight;\r\n  padding = 16;\r\n\r\n  constructor(private data: DataService) {}\r\n\r\n  createBracket(bracket: Partial<ITournament>) {\r\n    this.activeTournament = bracket;\r\n    this.activeContestants = bracket.contestants;\r\n    this.matchContainers = [];\r\n    this.numContestants = this.activeContestants.length;\r\n    this.createSeededBracket();\r\n    this.defineLayoutPlacements();\r\n\r\n    // if this is a previously stored match, update the winners\r\n    if (this.activeTournament.matches) {\r\n      this.matchContainers.forEach((match, i) => {\r\n        if (this.activeTournament.matches[i].winnerSeed) {\r\n          match.updateWinner(this.activeTournament.matches[i].winnerSeed);\r\n        }\r\n      });\r\n    }\r\n    this.data.setMatchContainers(this.matchContainers);\r\n  }\r\n\r\n  createSeededBracket() {\r\n    this.high2Power = this.pow2RoundUp(this.numContestants);\r\n    this.bigSkip = this.high2Power / 4;\r\n    this.seedsByIndex = [];\r\n    this.seedMatcher(1);\r\n    console.log('seedsByIndex: ', this.seedsByIndex);\r\n\r\n    this.numRounds = Math.log(this.high2Power) / Math.log(2);\r\n    this.matchesPerRound = [];\r\n    const numFirstRoundMatchesTops = this.high2Power / 2;\r\n    for (let i = 0; i < this.numRounds; i++) {\r\n      this.matchesPerRound[i] = [];\r\n    }\r\n\r\n    // Add the appropriate amount of matches per round.\r\n    // Starts from the winner and moves back.\r\n    for (let i = 0; i < this.numRounds; i++) {\r\n      for (let j = 0; j < numFirstRoundMatchesTops / Math.pow(2, i); j++) {\r\n        this.matchesPerRound[i][j] = new MatchContainer();\r\n        this.matchContainers.push(this.matchesPerRound[i][j]);\r\n      }\r\n    }\r\n\r\n    // Subscribe each match to the appropriate preceding matches.\r\n    for (let i = this.numRounds - 1; i > 0; i--) {\r\n      for (let j = 0; j < numFirstRoundMatchesTops / Math.pow(2, i); j++) {\r\n        this.matchesPerRound[i][j].setHighMatch(\r\n          this.matchesPerRound[i - 1][j * 2]\r\n        );\r\n        this.matchesPerRound[i][j].setLowMatch(\r\n          this.matchesPerRound[i - 1][j * 2 + 1]\r\n        );\r\n        this.matchesPerRound[i - 1][j * 2].addObserver(\r\n          this.matchesPerRound[i][j]\r\n        );\r\n        this.matchesPerRound[i - 1][j * 2 + 1].addObserver(\r\n          this.matchesPerRound[i][j]\r\n        );\r\n      }\r\n    }\r\n\r\n    let numSeeded = 0;\r\n    // place contestants in the correct match based on their seed\r\n    for (let i = 0; i < this.high2Power / 2; i++) {\r\n      if (numSeeded >= this.high2Power / 2) {\r\n        break;\r\n      }\r\n      console.log(this.activeContestants[i]);\r\n      this.matchesPerRound[0][this.seedsByIndex[i] - 1].addContestant(\r\n        this.activeContestants[i]\r\n      );\r\n      numSeeded++;\r\n    }\r\n    // loop backwards the other way for the second half\r\n    for (let i = 0; i < this.activeContestants.length - this.bigSkip * 2; i++) {\r\n      if (numSeeded >= this.numContestants) {\r\n        break;\r\n      }\r\n      this.matchesPerRound[0][\r\n        this.seedsByIndex[this.seedsByIndex.length - 1 - i] - 1\r\n      ].addContestant(this.activeContestants[this.bigSkip * 2 + i]);\r\n      numSeeded++;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Recursive function that seeds first round matches\r\n   * depending on the number of matchSlots\r\n   *\r\n   * MUST be given 1 as a parameter when\r\n   * called outside itself\r\n   *\r\n   * TODO: Change that ^ so this function doesn't\r\n   * rely on this class\r\n   *\r\n   * @param moveSpaces  The amount of matches to move\r\n   * @return            New indexes to apply algorithm to\r\n   */\r\n  seedMatcher(moveSpaces) {\r\n    moveSpaces *= 2;\r\n    let indexes;\r\n\r\n    if (moveSpaces < this.bigSkip) {\r\n      indexes = this.seedMatcher(moveSpaces);\r\n    } else {\r\n      // First 2 seed are anomalous to the pattern\r\n      if (this.bigSkip === 1) {\r\n        // if tourny size is 4\r\n        this.seedsByIndex.push(1);\r\n        this.seedsByIndex.push(2);\r\n      } else if (this.bigSkip === 2) {\r\n        // if tournament size 8\r\n        this.seedsByIndex.push(1);\r\n        this.seedsByIndex.push(3);\r\n        this.seedsByIndex.push(4);\r\n        this.seedsByIndex.push(2);\r\n      } else {\r\n        this.seedsByIndex.push(1);\r\n        this.seedsByIndex.push(1 + moveSpaces);\r\n      }\r\n      indexes = [];\r\n      indexes[0] = 1;\r\n      indexes[1] = 0;\r\n      return indexes;\r\n    }\r\n\r\n    // indexes of newly placed seed\r\n    // this will be returned to use for the next placements\r\n    const newIndexes = [];\r\n    let movesDone = 0;\r\n    for (let i = 0; i < indexes.length; i++) {\r\n      newIndexes[i] = this.seedsByIndex.length;\r\n      this.seedsByIndex.push(this.seedsByIndex[indexes[i]] + moveSpaces);\r\n      ++movesDone;\r\n    }\r\n\r\n    if (movesDone < this.bigSkip / moveSpaces) {\r\n      for (let j = indexes.length - 1; j >= 0; j--) {\r\n        newIndexes[movesDone] = this.seedsByIndex.length;\r\n        this.seedsByIndex.push(this.seedsByIndex[indexes[j]] - moveSpaces);\r\n        ++movesDone;\r\n      }\r\n    }\r\n\r\n    // Reverse new indexes so next cycle indexes backwards\r\n    newIndexes.reverse();\r\n\r\n    // Because we\r\n    if (moveSpaces === 2) {\r\n      moveSpaces = 1;\r\n      for (let k = this.seedsByIndex.length - 1; k >= 0; k--) {\r\n        this.seedsByIndex.push(this.seedsByIndex[k] + moveSpaces);\r\n      }\r\n    }\r\n    return newIndexes;\r\n  }\r\n\r\n  defineLayoutPlacements() {\r\n    // this.containerWidth = window.innerWidth - this.padding * 2;\r\n    // this.containerHeight = window.innerHeight - this.padding * 2;\r\n\r\n    this.matchWidth = this.containerWidth / 3 - this.padding;\r\n    this.matchHeight = this.containerHeight / 4 - this.padding;\r\n    debugger\r\n\r\n    const soonToBeRemovedMatches = [];\r\n    for (let i = 0; i < this.matchesPerRound.length; i++) {\r\n      for (let j = 0; j < this.matchesPerRound[i].length; j++) {\r\n        const thisMatch = this.matchesPerRound[i][j];\r\n        if (i === 0) {\r\n          if (!thisMatch.lowSeed) {\r\n            thisMatch.updateWinner(thisMatch.highSeed);\r\n            soonToBeRemovedMatches.push(thisMatch);\r\n            thisMatch.updateWinner(MatchContainer.HIGHSEED);\r\n          }\r\n          thisMatch.top = (this.matchHeight + this.padding) * j + this.padding;\r\n          thisMatch.left = 0 + this.padding;\r\n          thisMatch.width = this.matchWidth;\r\n          thisMatch.height = this.matchHeight;\r\n        } else {\r\n          thisMatch.top =\r\n            thisMatch.highMatch.top -\r\n            (thisMatch.highMatch.top - thisMatch.lowMatch.top) / 2;\r\n          thisMatch.left =\r\n            thisMatch.highMatch.left + this.matchWidth + this.padding;\r\n          thisMatch.width = this.matchWidth;\r\n          thisMatch.height = this.matchHeight;\r\n        }\r\n      }\r\n    }\r\n    this.matchContainers = this.matchContainers.filter(m => {\r\n      return soonToBeRemovedMatches.indexOf(m) === -1;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Round down to next higher power of 2 (return x if it's already a power of 2).\r\n   *\r\n   * @param x  The number in question\r\n   * @return   The next highest power of 2\r\n   */\r\n  pow2RoundUp(x) {\r\n    if (x < 0) {\r\n      return 0;\r\n    }\r\n    --x;\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 1;\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 2;\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 4;\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 8;\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 16;\r\n    return x + 1;\r\n  }\r\n\r\n  /**\r\n   * Round down to next lower power of 2 (return x if it's already a power of 2).\r\n   *\r\n   * @param x  The number in question\r\n   * @return   The next lowest power of 2\r\n   */\r\n  pow2RoundDown(x) {\r\n    if (x < 0) {\r\n      return 0;\r\n    }\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 1;\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 2;\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 4;\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 8;\r\n    // tslint:disable-next-line: no-bitwise\r\n    x |= x >> 16;\r\n    // tslint:disable-next-line: no-bitwise\r\n    return x - (x >> 1);\r\n  }\r\n\r\n  setContainerDimensions(width: number, height: number) {\r\n    this.containerWidth = width - this.padding * 2;\r\n    this.containerHeight = height - this.padding * 2;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedModule } from 'src/shared/shared.module';\r\nimport { BracketHandler } from './bracket-handler.service';\r\nimport { DataService } from './data.service';\r\nimport { BracketViewComponent } from './bracket-view/bracket-view.component';\r\n\r\n@NgModule({\r\n  declarations: [BracketViewComponent],\r\n  imports: [CommonModule, SharedModule],\r\n  providers: [BracketHandler, DataService],\r\n  exports: [BracketViewComponent]\r\n})\r\nexport class BracketModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { MatchContainer } from '../../shared/data/match-container';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n  matchContainers: BehaviorSubject<MatchContainer[]> = new BehaviorSubject<\r\n    MatchContainer[]\r\n  >(null);\r\n\r\n  setMatchContainers(matchContainers: MatchContainer[]) {\r\n    this.matchContainers.next(matchContainers);\r\n  }\r\n\r\n  getMatchContainers() {\r\n    return this.matchContainers;\r\n  }\r\n}\r\n","import { BehaviorSubject } from 'rxjs';\r\n\r\nimport { IUser, ITournament } from '../../../shared/models';\nimport { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\nexport class AppStore {\r\n  loggedInUser: BehaviorSubject<IUser> = new BehaviorSubject<IUser>(null);\r\n  currentTournament: BehaviorSubject<Partial<ITournament>> = new BehaviorSubject<Partial<ITournament>>(null);\r\n  allTournaments: BehaviorSubject<Partial<ITournament>[]> = new BehaviorSubject<Partial<ITournament>[]>(null);\r\n}\r\n","import { ITeam, ISet, IMatch, IContestant } from '../../../../shared/models';\r\nimport { MatchSubject, MatchObserver } from '../utils';\r\n\r\nexport class MatchContainer extends MatchSubject implements MatchObserver {\r\n  static HIGHSEED = 'HIGHSEED';\r\n  static LOWSEED = 'LOWSEED';\r\n\r\n  match: IMatch;\r\n\r\n  highSeed: IContestant; // higher seeded contestant that will be shown at top\r\n  lowSeed: IContestant; // lower seeded contestant that will be shown at bottom\r\n  highMatch: IMatch; // match from previous round that will determine our high seed\r\n  lowMatch: IMatch; // match from previous round that will determine our low seed\r\n\r\n  sets: ISet[] = [];\r\n\r\n  winner: IContestant; // the winner of this match;\r\n  winnerSeed: string;\r\n\r\n  width;\r\n  height;\r\n  top;\r\n  left;\r\n\r\n  update() {\r\n    this.highSeed = this.highMatch.winner;\r\n    this.lowSeed = this.lowMatch.winner;\r\n  }\r\n\r\n  updateWinner(seed: string) {\r\n    if (seed === MatchContainer.HIGHSEED) {\r\n      this.winner = this.highSeed;\r\n      this.winnerSeed = MatchContainer.HIGHSEED;\r\n    }\r\n    if (seed === MatchContainer.LOWSEED) {\r\n      this.winner = this.lowSeed;\r\n      this.winnerSeed = MatchContainer.LOWSEED;\r\n    }\r\n    this.notifyObservers();\r\n    // this.next(this.match);\r\n  }\r\n\r\n  /**\r\n   * Places the given contestant in the high seed slot\r\n   *\r\n   * @param matchSlot MatchSlot to add to match\r\n   * @return           Returns either replaced contestant or null if spot was open\r\n   */\r\n  setHighSeed(contestant) {\r\n    if (this.highSeed === null) {\r\n      this.highSeed = contestant;\r\n      return null;\r\n    } else {\r\n      const temp = this.highSeed;\r\n      this.highSeed = contestant;\r\n      return temp;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Places the given contestant in the high seed slot\r\n   *\r\n   * @param matchSlot MatchSlot to add to match\r\n   * @return           Returns either replaced contestant or null if spot was open\r\n   */\r\n  setLowSeed(contestant) {\r\n    if (this.lowSeed === null) {\r\n      this.lowSeed = contestant;\r\n      return null;\r\n    } else {\r\n      const temp = this.lowSeed;\r\n      this.lowSeed = contestant;\r\n      return temp;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method is used to add a contestant to a match\r\n   * and will add it to the correct seed based on\r\n   * contestant's seed.\r\n   *\r\n   * WARNING!\r\n   * If match is full, will kick a player out of the match\r\n   * and return it.\r\n   *\r\n   * @param contestant Contestant to add to match\r\n   * @return\r\n   */\r\n  addContestant(contestant) {\r\n    if (!this.highSeed && !this.lowSeed) {\r\n      // if both high and low seeds are empty\r\n      console.log('New high seed by default.');\r\n      this.highSeed = contestant; // store in high seed\r\n      return null;\r\n    } else if (!this.lowSeed) {\r\n      // if only low seed is empty\r\n      if (this.highSeed.seed <= contestant.seed || !contestant.seed) {\r\n        // if the current higher seed has better or equal seed\r\n        console.log('New low seed.');\r\n        this.lowSeed = contestant; // store in low seed\r\n        return null;\r\n      } else {\r\n        console.log('New high seed, demoted prev to low seed.');\r\n        this.lowSeed = this.highSeed; // move current high seed to low\r\n        this.highSeed = contestant; // store new contestant in high seed\r\n        return null;\r\n      }\r\n    } else if (!this.highSeed) {\r\n      // if only the high seed is empty\r\n      if (contestant.seed && this.lowSeed.seed > contestant.seed) {\r\n        // if the current lower seed has worse seed\r\n        console.log('New high seed.');\r\n        this.highSeed = contestant; // sotre in high seed\r\n        return null;\r\n      } else {\r\n        console.log('New low seed, promoted prev to high seed.');\r\n        this.highSeed = this.lowSeed; // move current low seed to high seed\r\n        this.lowSeed = contestant; // store new contestant in high seed\r\n        return null;\r\n      }\r\n    } else {\r\n      // if the new contestant has better seed than the low seed and worse than the high seed\r\n      if (\r\n        this.highSeed.seed <= contestant.seed &&\r\n        contestant.seed > this.lowSeed.seed\r\n      ) {\r\n        console.log('New low seed, returned old low seed.');\r\n        const temp = this.lowSeed;\r\n        this.lowSeed = contestant; // save newbie to low seed\r\n        return temp; // and return the removed contestant\r\n        // the new contestant had more than the high seed\r\n      } else if (this.highSeed.seed > contestant.seed) {\r\n        console.log('New high seed, returned old low seed.');\r\n        const temp = this.lowSeed;\r\n        this.lowSeed = this.highSeed;\r\n        this.highSeed = contestant;\r\n        return temp;\r\n      } else {\r\n        console.log(`OOPS! ${contestant.name} was not added to the match.`);\r\n        return contestant;\r\n      }\r\n    }\r\n  }\r\n\r\n  // save a reference to the high match so we can\r\n  // try to grab the winner in our update function\r\n  setHighMatch(match: IMatch) {\r\n    this.highMatch = match;\r\n    this.highSeed = match.winner;\r\n  }\r\n\r\n  getHighMatch() {\r\n    return this.highMatch;\r\n  }\r\n\r\n  // save a reference to the low match so we can\r\n  // try to grab the winner in our update function\r\n  setLowMatch(match: IMatch) {\r\n    this.lowMatch = match;\r\n    this.lowSeed = match.winner;\r\n  }\r\n\r\n  getLowMatch() {\r\n    return this.lowMatch;\r\n  }\r\n\r\n  getStyleObject() {\r\n    return {\r\n      position: 'absolute',\r\n      'top.px': this.top,\r\n      'left.px': this.left,\r\n      'width.px': this.width,\r\n      'height.px': this.height\r\n    };\r\n  }\r\n\r\n  getData() {\r\n    return {\r\n      highSeed: this.highSeed.id,\r\n      lowSeed: this.lowSeed.id,\r\n      highMatch: this.highMatch,\r\n      lowMatch: this.lowMatch,\r\n\r\n      matchRounds: this.sets,\r\n\r\n      winner: this.winner.id,\r\n      winnerSeed: this.winnerSeed\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Apollo } from 'apollo-angular';\r\nimport { TournamentGqlFunctions } from './tournament.gql';\r\nimport { tap, catchError } from 'rxjs/operators';\r\nimport { AppStore } from 'src/shared/app.store';\r\n\r\n@Injectable()\r\nexport class TournamentDataService {\r\n  constructor(private apollo: Apollo, private appStore: AppStore) {}\r\n\r\n  getAllTournaments() {\r\n    return this.apollo\r\n      .query({\r\n        query: TournamentGqlFunctions.queries.tournaments\r\n      })\r\n      .pipe(\r\n        tap((result: any) => {\r\n          this.appStore.allTournaments.next(result.data.tournaments);\r\n        }),\r\n        catchError((error, caught) => {\r\n          return caught;\r\n        })\r\n      )\r\n      .toPromise();\r\n  }\r\n\r\n  createTournament({ name, contestantCount }) {\r\n    return this.apollo\r\n      .mutate({\r\n        mutation: TournamentGqlFunctions.mutations.createTournament,\r\n        variables: {\r\n          name,\r\n          contestantCount\r\n        }\r\n      })\r\n      .pipe(\r\n        tap((result: any) => {\r\n          this.appStore.currentTournament.next(result.data.addTournament);\r\n        })\r\n      );\r\n  }\r\n\r\n  getTournamentFromId(linkCode: string) {\r\n    return this.apollo\r\n      .query({\r\n        query: TournamentGqlFunctions.queries.tournamentFromLinkCode,\r\n        variables: {\r\n          linkCode\r\n        }\r\n      })\r\n      .pipe(\r\n        tap((result: any) => {\r\n          this.appStore.currentTournament.next(\r\n            result.data.tournamentFromLinkCode\r\n          );\r\n        })\r\n      );\r\n  }\r\n\r\n  getTournamentFromLinkCode(linkCode: string) {\r\n    return this.apollo\r\n      .query({\r\n        query: TournamentGqlFunctions.queries.tournamentFromLinkCode,\r\n        variables: {\r\n          linkCode\r\n        }\r\n      })\r\n      .pipe(\r\n        tap((result: any) => {\r\n          this.appStore.currentTournament.next(\r\n            result.data.tournamentFromLinkCode\r\n          );\r\n        })\r\n      );\r\n  }\r\n\r\n  addContestant(tournamentId: string, contestant) {}\r\n}\r\n","import gql from 'graphql-tag';\r\n\r\nexport const TournamentGqlFunctions = {\r\n  mutations: {\r\n    createTournament: gql`\r\n      mutation addTournament($name: String!, $contestantCount: Int!) {\r\n        addTournament(\r\n          newTournamentData: { name: $name, contestantCount: $contestantCount }\r\n        ) {\r\n          id\r\n          name\r\n          contestantCount\r\n          linkCode\r\n          createdOn\r\n        }\r\n      }\r\n    `\r\n  },\r\n  queries: {\r\n    tournamentFromId: gql`\r\n      query tournamentFromLinkCode($linkCode: String!) {\r\n        tournamentFromLinkCode(linkCode: $linkCode) {\r\n          id\r\n          name\r\n          contestantCount\r\n          linkCode\r\n          createdOn\r\n        }\r\n      }\r\n    `,\r\n    tournamentFromLinkCode: gql`\r\n      query tournamentFromLinkCode($linkCode: String!) {\r\n        tournamentFromLinkCode(linkCode: $linkCode) {\r\n          id\r\n          name\r\n          contestantCount\r\n          linkCode\r\n          createdOn\r\n        }\r\n      }\r\n    `,\r\n    tournaments: gql`\r\n      query tournaments($skip: Int, $take: Int) {\r\n        tournaments(skip: $skip, take: $take ) {\r\n          id\r\n          name\r\n          createdOn\r\n          linkCode\r\n        }\r\n      }\r\n    `\r\n  }\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\n\r\n@NgModule({\r\n  exports: [\r\n    MatButtonModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    MatListModule,\r\n    MatTabsModule\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { MaterialModule } from './material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TournamentDataService } from './data/tournament/tournament.data.service';\r\n\r\n@NgModule({\r\n  exports: [FormsModule, ReactiveFormsModule, MaterialModule],\r\n  providers: [TournamentDataService]\r\n})\r\nexport class SharedModule {}\r\n","export { MatchObserver } from './match-observer';\r\nexport { MatchSubject } from './match-subject';\r\n","import { MatchObserver } from './match-observer';\r\n\r\nexport abstract class MatchSubject {\r\n  observers: MatchObserver[] = [];\r\n\r\n  addObserver(observer) {\r\n    if (this.observers.indexOf(observer) === -1) {\r\n      this.observers.push(observer);\r\n    }\r\n  }\r\n\r\n  removeObserver(observer) {\r\n    this.observers = this.observers.filter(obs => {\r\n      return observer !== obs;\r\n    });\r\n  }\r\n\r\n  notifyObservers() {\r\n    for (const observer of this.observers) {\r\n      observer.update();\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}