# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

interface Contestant {
  _id: ID
  name: String
  seed: Int
  points: Int
  isRegistered: Boolean
}

input ContestantInput {
  _id: ID
  name: String
  seed: Int
  points: Int
  isRegistered: ID
}

"""Date custom scalar type"""
scalar Date

type Mutation {
  addRecipe(newRecipeData: NewRecipeInput!): Recipe!
  removeRecipe(id: String!): Boolean!
  addUser(newUserData: NewUserInput!): User!
  removeUser(id: String!): Boolean!
  addTournament(newTournamentData: NewTournamentInput!): Tournament!
  updateTournament(updateTournamentData: UpdateTournamentInput!): Tournament!
  joinTournament(userId: ID, contestantName: String, id: ID!): Tournament!
  removeTournament(id: String!): Boolean!
}

input NewRecipeInput {
  title: String!
  description: String
  ingredients: [String!]!
}

input NewTournamentInput {
  name: String!
  contestantCount: Int
  createdBy: ID
  contestants: [ContestantInput]
}

input NewUserInput {
  name: String!
  email: String!
  firstName: String!
  lastName: String!
}

type Query {
  recipe(id: String!): Recipe!
  recipes(skip: Int = 0, take: Int = 25): [Recipe!]!
  user(id: String!): User!
  users(skip: Int = 0, take: Int = 25): [User!]!
  tournament(linkCode: String, id: String): Tournament!
  tournaments(skip: Int = 0, take: Int = 25): [Tournament!]!
}

type Recipe {
  id: ID!
  title: String!
  description: String
  creationDate: Date!
  ingredients: [String!]!
}

type Subscription {
  recipeAdded: Recipe!
  userAdded: User!
  tournamentAdded: Tournament!
}

type Team {
  id: ID!
  name: String!
  createdOn: Date!
  updatedOn: Date!
  users: User
  seed: Float!
}

"""The tournament model"""
type Tournament {
  _id: ID!
  name: String!
  contestantCount: Int!
  createdBy: User
  contestants: [Contestant]
  teams: [Team]
  createdOn: Date
  updatedOn: Date
  linkCode: String
}

input UpdateTournamentInput {
  _id: ID!
  name: String
  contestantCount: Int
  contestants: [ContestantInput]
  updatedBy: ID
}

"""The user model"""
type User implements Contestant {
  _id: ID
  name: String
  seed: Int
  points: Int
  isRegistered: Boolean
  email: String
  firstName: String
  lastName: String
  teams: [Team]
  createdOn: Date
  updatedOn: Date
}
